@using MudBlazor.Extensions.Explorer.Extensions.ThirdParty.Markdown.Examples
@using MudBlazor.Extensions.Explorer.Helpers
@namespace MudBlazor.Extensions.Explorer.Extensions

@*installation*@
<DocsPageSection>
    <SectionHeader Title="Installation">
        <Description>
            <ol class="ml-5">
                <li class="my-2">
                    If you don't have MudBlazor installed, <MudLink Href="https://mudblazor.com/getting-started/installation" Target="_blank">please install it first</MudLink>.
                </li>
                <li class="my-2">
                    Install the NuGet package: <CodeInline>dotnet add package MudBlazor.Markdown</CodeInline>
                </li>
                <li class="my-2">
                    Add the following in <CodeInline>_Host.cshtml</CodeInline> (BSS) or <CodeInline>index.html</CodeInline> (WASM). <br/>
                    In the <CodeInline Tag>head</CodeInline> node add:
                    <br/>
                    <CodeInline>
                        @("<link href=\"_content/MudBlazor.Markdown/MudBlazor.Markdown.min.css\" rel=\"stylesheet\" />")
                    </CodeInline>
                </li>
                <li class="my-2">
                    At the bottom of the <CodeInline Tag>body</CodeInline> node add this JS source: <br/>
                    <CodeInline>
                        @("<script src=\"_content/MudBlazor.Markdown/MudBlazor.Markdown.min.js\"></script>")
                    </CodeInline>
                </li>
                <li class="my-2">
                    For BSS add <CodeInline>services.AddMudMarkdownServices();</CodeInline> in <CodeInline>Startup.cs</CodeInline><br/>
                    For WASM add <CodeInline>builder.Services.AddMudMarkdownServices();</CodeInline> in <CodeInline>Program.cs</CodeInline>                    
                </li>
            </ol>
        </Description>
    </SectionHeader>
</DocsPageSection>

@*usage*@
<DocsPageSection>
    <SectionHeader Title="Usage">
        <Description>
            Bind a markdown string to the <CodeInline>Value</CodeInline> property to render it as HTML. The <CodeInline>OverrideLink</CodeInline> parameter allows you to 
            supply a function that runs when a markdown link is clicked to control navigation.
            <br/><br/>
            In the example below you can edit the markdown string and see how the <CodeInline Tag>Markdown</CodeInline> component automatically updates the rendered HTML.
        </Description>
    </SectionHeader>
    <SectionContent Outlined="true" FullWidth="true">
        <MarkdownExample />
    </SectionContent>
    <SectionSource Code="MarkdownExample" />
</DocsPageSection>

@*markdown syntax*@
<DocsPageSection>
    <SectionHeader Title="Markdown syntax">
        <Description>
            Markdown syntax is very easy. The example below shows headings, bold, italics, quotes, horizontal lines, lists, tables and code block.
        </Description>
    </SectionHeader>
    <SectionContent Outlined="true" FullWidth="true">
        <MarkdownSyntaxExample />
    </SectionContent>
</DocsPageSection>